// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String //use encrypted passwords.
  publicKey String
  createdAt DateTime @default(now())

  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")

  user1Conversations Conversation[] @relation("User1Conversations")
  user2Conversations Conversation[] @relation("User2Conversations")
}

model Conversation {
  id      String @id @default(uuid())
  user1   User   @relation("User1Conversations", fields: [user1Id], references: [id])
  user1Id String
  user2   User   @relation("User2Conversations", fields: [user2Id], references: [id])
  user2Id String

  messages Message[]

  @@unique([user1Id, user2Id])
}

model Message {
  id             String       @id @default(uuid())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String

  sender   User   @relation("SentMessages", fields: [senderId], references: [id])
  senderId String

  recipient   User   @relation("ReceivedMessages", fields: [recipientId], references: [id])
  recipientId String

  ciphertext String
  timestamp  DateTime @default(now())
}
